# Secrets defined here are available for reference under registry/password, env/secret, builder/secrets,
# and accessories/*/env/secret in config/deploy.yml. All secrets should be pulled from either
# password manager, ENV, or a file. DO NOT ENTER RAW CREDENTIALS HERE! This file needs to be safe for git.

# Example of extracting secrets from 1password (or another compatible pw manager)
# SECRETS=$(kamal secrets fetch --adapter 1password --account your-account --from Vault/Item KAMAL_REGISTRY_PASSWORD RAILS_MASTER_KEY)
# KAMAL_REGISTRY_PASSWORD=$(kamal secrets extract KAMAL_REGISTRY_PASSWORD ${SECRETS})
# RAILS_MASTER_KEY=$(kamal secrets extract RAILS_MASTER_KEY ${SECRETS})

# Use a GITHUB_TOKEN if private repositories are needed for the image
# GITHUB_TOKEN=$(gh config get -h github.com oauth_token)

# Grab the registry password from ENV
KAMAL_REGISTRY_PASSWORD=$KAMAL_REGISTRY_PASSWORD

# Database password
POSTGRES_USER=$POSTGRES_USER
POSTGRES_PASSWORD=$(cat .env.production | grep POSTGRES_PASSWORD | cut -d '=' -f2)

# Improve security by using a password manager. Never check config/master.key into git!
RAILS_MASTER_KEY=$(cat config/master.key)
UNI_ONE_API_KEY=$(cat .env.production | grep UNI_ONE_API_KEY | cut -d '=' -f2)
SENTRY_DSN=$(cat .env.production | grep SENTRY_DSN | cut -d '=' -f2)
SENTRY_ENABLED_ENVIRONMENTS=$(cat .env.production | grep SENTRY_ENABLED_ENVIRONMENTS | cut -d '=' -f2)
CLOUDFLARE_R2_JURISDICTION_ENDPOINT=$(cat .env.production | grep CLOUDFLARE_R2_JURISDICTION_ENDPOINT | cut -d '=' -f2)
CLOUDFLARE_R2_ACCESS_KEY_ID=$(cat .env.production | grep CLOUDFLARE_R2_ACCESS_KEY_ID | cut -d '=' -f2)
CLOUDFLARE_R2_SECRET_ACCESS_KEY=$(cat .env.production | grep CLOUDFLARE_R2_SECRET_ACCESS_KEY | cut -d '=' -f2)
CLOUDFLARE_R2_BUCKET_NAME=$(cat .env.production | grep CLOUDFLARE_R2_BUCKET_NAME | cut -d '=' -f2)
